{
  "hash": "761b56226d8834bfb3f3bd7add3a4f71",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quick Plot: TidyTuesday 2021 Week 42\"\ndescription: \"Revisiting data about big pumpkins\"\ndate: \"2025-09-29\"\nimage: featured.png\nimage-alt: A grid of bar plots displaying the annual top 10 states and provinces by average pumpkin weight.\ncategories:\n  - TidyTuesday\n  - Data visualization\n  - ggplot2\ntoc: true\nnumber-sections: true\ncitation: true\nformat: html\nexecute:\n  echo: true\n  warning: false\n---\n\nThe second of three posts revisiting old data visualization work on TidyTuesday data sets. The code and plot were initially created on October 22nd, 2021. The pumpkin weight data was originally sourced from [BigPumpkins.com](https://www.bigpumpkins.com/ViewArticle.asp?id=132). See the [TidyTuesday repo](https://github.com/rfordatascience/tidytuesday/tree/main/data/2021/2021-10-19 \"TidyTuesday Github Repo for 2021wk42\") for more information.\n\n## Setup\n\n### Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggridges)\nlibrary(ggthemes)\nlibrary(tidytext)\nlibrary(geofacet)\ntheme_set(theme_tufte())\n```\n:::\n\n\n### Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2021, week = 43)\npumpkins <- tuesdata$pumpkins\n```\n:::\n\n\n## Data Prep\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(pumpkins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 28,065\nColumns: 14\n$ id                <chr> \"2013-F\", \"2013-F\", \"2013-F\", \"2013-F\", \"2013-F\", \"2…\n$ place             <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"5\", \"7\", \"8\", \"9\", \"10\", \"…\n$ weight_lbs        <chr> \"154.50\", \"146.50\", \"145.00\", \"140.80\", \"139.00\", \"1…\n$ grower_name       <chr> \"Ellenbecker, Todd & Sequoia\", \"Razo, Steve\", \"Ellen…\n$ city              <chr> \"Gleason\", \"New Middletown\", \"Glenson\", \"Combined Lo…\n$ state_prov        <chr> \"Wisconsin\", \"Ohio\", \"Wisconsin\", \"Wisconsin\", \"Wisc…\n$ country           <chr> \"United States\", \"United States\", \"United States\", \"…\n$ gpc_site          <chr> \"Nekoosa Giant Pumpkin Fest\", \"Ohio Valley Giant Pum…\n$ seed_mother       <chr> \"209 Werner\", \"150.5 Snyder\", \"209 Werner\", \"109 Mar…\n$ pollinator_father <chr> \"Self\", NA, \"103 Mackinnon\", \"209 Werner '12\", \"open…\n$ ott               <chr> \"184.0\", \"194.0\", \"177.0\", \"194.0\", \"0.0\", \"190.0\", …\n$ est_weight        <chr> \"129.00\", \"151.00\", \"115.00\", \"151.00\", \"0.00\", \"141…\n$ pct_chart         <chr> \"20.0\", \"-3.0\", \"26.0\", \"-7.0\", \"0.0\", \"-1.0\", \"-4.0…\n$ variety           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n```\n\n\n:::\n:::\n\n\nSome light cleanup will make this pumpkin data easier to visualize.\n\n-   Several variables contain numeric data but are `character` types\n-   Some missing data (`NA`) can be dropped\n-   The `id` contains two pieces of data that it would be convenient to separate\n-   There are some rows with wonky data that we should filter out entirely. *e.g.*\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"kwhepchezk\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#kwhepchezk table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#kwhepchezk thead, #kwhepchezk tbody, #kwhepchezk tfoot, #kwhepchezk tr, #kwhepchezk td, #kwhepchezk th {\n  border-style: none;\n}\n\n#kwhepchezk p {\n  margin: 0;\n  padding: 0;\n}\n\n#kwhepchezk .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#kwhepchezk .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#kwhepchezk .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#kwhepchezk .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#kwhepchezk .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#kwhepchezk .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#kwhepchezk .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#kwhepchezk .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#kwhepchezk .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#kwhepchezk .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#kwhepchezk .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#kwhepchezk .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#kwhepchezk .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#kwhepchezk .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#kwhepchezk .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwhepchezk .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#kwhepchezk .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#kwhepchezk .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#kwhepchezk .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwhepchezk .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#kwhepchezk .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwhepchezk .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#kwhepchezk .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwhepchezk .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kwhepchezk .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwhepchezk .gt_left {\n  text-align: left;\n}\n\n#kwhepchezk .gt_center {\n  text-align: center;\n}\n\n#kwhepchezk .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#kwhepchezk .gt_font_normal {\n  font-weight: normal;\n}\n\n#kwhepchezk .gt_font_bold {\n  font-weight: bold;\n}\n\n#kwhepchezk .gt_font_italic {\n  font-style: italic;\n}\n\n#kwhepchezk .gt_super {\n  font-size: 65%;\n}\n\n#kwhepchezk .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#kwhepchezk .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#kwhepchezk .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#kwhepchezk .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#kwhepchezk .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#kwhepchezk .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#kwhepchezk .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#kwhepchezk .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#kwhepchezk div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"id\">id</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"place\">place</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"weight_lbs\">weight_lbs</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"grower_name\">grower_name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"city\">city</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"state_prov\">state_prov</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"country\">country</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"gpc_site\">gpc_site</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"seed_mother\">seed_mother</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"pollinator_father\">pollinator_father</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ott\">ott</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"est_weight\">est_weight</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"pct_chart\">pct_chart</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"variety\">variety</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"id\" class=\"gt_row gt_left\">2021-W</td>\n<td headers=\"place\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"weight_lbs\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"grower_name\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"city\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"state_prov\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"country\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"gpc_site\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"seed_mother\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"pollinator_father\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"ott\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"est_weight\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"pct_chart\" class=\"gt_row gt_left\">253 Entries.\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t(18 exhibition only,\n               5 damaged)</td>\n<td headers=\"variety\" class=\"gt_row gt_left\">NA</td></tr>\n  </tbody>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n### Data cleanup\n\n\n::: {.cell}\n\n```{.r .cell-code}\npumpkins <- pumpkins |>\n  mutate(\n    across(weight_lbs, parse_number),\n    across(place, as.numeric),\n    across(ott, as.numeric),\n    across(est_weight, as.numeric),\n    across(pct_chart, as.numeric)\n  ) |>\n  drop_na(place) |> # type coercion introduces some NAs\n  separate(id, c(\"year\", \"type\"), sep = \"-\") |>\n  filter(!str_detect(country, \",\")) |>\n  mutate(\n    type = fct_recode(\n      type,\n      \"Field Pumpkin\" = \"F\",\n      \"Giant Pumpkin\" = \"P\",\n      \"Giant Squash\" = \"S\",\n      \"Giant Watermelon\" = \"W\",\n      \"Long Gourd\" = \"L\",\n      \"Tomato\" = \"T\"\n    )\n  )\n```\n:::\n\n\n## Quick Plots\n\n### Density Ridges\n\n\n::: {.cell}\n\n```{.r .cell-code}\npumpkins |>\n  ggplot(aes(y = type, x = weight_lbs, fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE,\n    jittered_points = TRUE,\n    position = position_raincloud(adjust_vlines = TRUE),\n    point_size = 0.4,\n    point_alpha = 0.2,\n    vline_width = 0\n  ) +\n  scale_fill_tableau(palette = \"Tableau 10\") +\n  labs(x = 'Weight (lbs)', y = '') +\n  theme(legend.position = 'none')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/density-ridge-plot-1.png){fig-alt='A column of density ridge plots with jittered points scattered beneath each ridge. The ridges are filled by quantile, breaking each area into 4 sections.' width=672}\n:::\n:::\n\n\n### Regional and global variations in annual average weights\n\n\n::: {.cell .column-page-right}\n\n```{.r .cell-code}\npumpkins |>\n  group_by(year, state_prov) |>\n  summarize(avg_weight = mean(weight_lbs, na.rm = T)) |>\n  slice_max(avg_weight, n = 10) |>\n  ungroup() |>\n  inner_join(\n    pumpkins |>\n      select(state_prov, country),\n    by = \"state_prov\",\n    relationship = \"many-to-many\"\n  ) |>\n  distinct() |>\n  mutate(state_prov = reorder_within(state_prov, avg_weight, year)) |>\n  ggplot(aes(avg_weight, state_prov, fill = country)) +\n  geom_col() +\n  facet_wrap(. ~ year, scales = \"free_y\") +\n  scale_y_reordered() +\n  scale_fill_tableau(palette = \"Tableau 20\") +\n  scale_x_continuous(breaks = scales::breaks_pretty(n = 3)) +\n  theme(\n    strip.text = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    plot.title = element_text(size = 18)\n  ) +\n  labs(\n    x = \"Average Pumpkin Weight\",\n    y = \"\",\n    title = str_wrap(\n      \"Top 10 Yearly Average Pumpkin Weights per State/Province by Country\",\n      width = 40\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/avg-weight-bars-1.png){fig-alt='A 3x3 grid of bar charts tracking the top 10 heaviest pumpkins by weight.\n' width=864}\n:::\n:::\n\n\n### US Average Weights by State\n\nThere was a time when I really liked the idea of laying out small plots in rough map shapes. This one works out alright, but that certainly isn't always true.\n\n\n::: {.cell .column-page}\n\n```{.r .cell-code}\npumpkins |>\n  filter(country == \"United States\") |>\n  group_by(year, type, state_prov) |>\n  summarize(avg_weight = mean(weight_lbs, na.rm = T)) |>\n  ungroup() |>\n  ggplot(aes(as.numeric(year), avg_weight, color = type)) +\n  geom_line(linewidth = 1) +\n  facet_geo(~state_prov, label = \"name\", scales = \"free\") +\n  scale_x_continuous(breaks = seq(2013, 2021, 3)) +\n  scale_color_tableau() +\n  labs(\n    x = \"Year\",\n    y = \"Average Weight\",\n    color = \"Pumpkin Type\",\n    title = \"State-wise Pumpkin Average Weight\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/us-states-lines-1.png){fig-alt='A grid of plots roughly laid out like the US states. Each plot is a line graph tracking average weights by year.\n' width=1440}\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}