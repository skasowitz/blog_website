{
  "hash": "d9f6081892801333208b5821788a699f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quick Plot: TidyTuesday 2022 Week 2\"\ndescription: \"Revisiting an old plot\"\ndate: \"2025-09-25\"\nimage: featured.png\nimage-alt: A grid of plots roughly laid out like the states of the United State of America. There is one plot per state, each displaying a collection of colored areas, with the height corresponding to the percent of a bee colony affected by a particular stressor as measured over time.\ncategories:\n  - TidyTuesday\n  - Data visualization\n  - ggplot2\ntoc: true\nnumber-sections: true\ncitation: true\nformat: html\nexecute:\n  echo: true\n  warning: false\n---\n\nThis is part of a short series of posts revisiting data visualization work on TidyTuesday data sets. The code and plot were initially created on January 11th, 2022. This bee colony collapse data originally comes from the USDA. See the [TidyTuesday repo](https://github.com/rfordatascience/tidytuesday/tree/main/data/2022/2022-01-11 \"TidyTuesday Github Repo for 2022wk2\") for more information.\n\n## Setup\n\n### Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(geofacet)\nlibrary(ggokabeito)\n```\n:::\n\n\n### Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolony <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv'\n)\nstressor <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv'\n)\n```\n:::\n\n\n## Explore the data\n\nPeak at the data as provided...\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(colony)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,222\nColumns: 10\n$ year            <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, …\n$ months          <chr> \"January-March\", \"January-March\", \"January-March\", \"Ja…\n$ state           <chr> \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Color…\n$ colony_n        <dbl> 7000, 35000, 13000, 1440000, 3500, 3900, 305000, 10400…\n$ colony_max      <dbl> 7000, 35000, 14000, 1690000, 12500, 3900, 315000, 1050…\n$ colony_lost     <dbl> 1800, 4600, 1500, 255000, 1500, 870, 42000, 14500, 380…\n$ colony_lost_pct <dbl> 26, 13, 11, 15, 12, 22, 13, 14, 4, 4, 40, 22, 18, 23, …\n$ colony_added    <dbl> 2800, 3400, 1200, 250000, 200, 290, 54000, 47000, 3400…\n$ colony_reno     <dbl> 250, 2100, 90, 124000, 140, NA, 25000, 9500, 760, 8000…\n$ colony_reno_pct <dbl> 4, 6, 1, 7, 1, NA, 8, 9, 7, 9, 4, 1, 2, 1, NA, 13, NA,…\n```\n\n\n:::\n:::\n\n\n...quick overview of the data types and completeness\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(colony)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |       |\n|:------------------------|:------|\n|Name                     |colony |\n|Number of rows           |1222   |\n|Number of columns        |10     |\n|_______________________  |       |\n|Column type frequency:   |       |\n|character                |2      |\n|numeric                  |8      |\n|________________________ |       |\n|Group variables          |None   |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|months        |         0|             1|  10|  16|     0|        4|          0|\n|state         |         0|             1|   4|  14|     0|       47|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable   | n_missing| complete_rate|      mean|        sd|   p0|  p25|   p50|   p75|    p100|hist  |\n|:---------------|---------:|-------------:|---------:|---------:|----:|----:|-----:|-----:|-------:|:-----|\n|year            |         0|          1.00|   2017.77|      1.89| 2015| 2016|  2018|  2019|    2021|▇▃▃▃▆ |\n|colony_n        |        47|          0.96| 123578.04| 437835.18| 1300| 8000| 17500| 55500| 3181180|▇▁▁▁▁ |\n|colony_max      |        72|          0.94|  79112.77| 190823.42| 1700| 9000| 21000| 68750| 1710000|▇▁▁▁▁ |\n|colony_lost     |        47|          0.96|  16551.32|  60544.42|   20|  950|  2200|  6500|  502350|▇▁▁▁▁ |\n|colony_lost_pct |        54|          0.96|     11.38|      7.23|    1|    6|    10|    15|      52|▇▅▁▁▁ |\n|colony_added    |        83|          0.93|  17243.20|  68167.65|   10|  420|  1800|  6500|  736920|▇▁▁▁▁ |\n|colony_reno     |       131|          0.89|  15278.86|  62588.04|   10|  260|   960|  4585|  806170|▇▁▁▁▁ |\n|colony_reno_pct |       260|          0.79|      9.10|      9.66|    1|    2|     6|    12|      77|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolony |>\n  count(year, months) |>\n  ggplot(aes(x = year, y = n, fill = months)) +\n  geom_col() +\n  scale_fill_okabe_ito() +\n  scale_x_continuous(breaks = scales::breaks_width(1)) +\n  labs(\n    title = 'Quarterly rows of data per year',\n    subtitle = 'Expect one per state',\n    y = '',\n    x = 'Year'\n  ) +\n  theme_bw() +\n  theme(legend.position = 'bottom', )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/row-count-plot-1.png){fig-alt='Stacked bar plot showing number of rows of data for each year by quarter.' width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolony |>\n  summarise(n = sum(colony_n), .by = c(year, months)) |>\n  ggplot(aes(x = year, y = months, size = n / 1000000)) +\n  geom_point(show.legend = FALSE) +\n  scale_x_continuous(breaks = scales::breaks_width(1)) +\n  theme_bw() +\n  labs(title = 'Total colony sizes (n)', x = 'Year', y = 'Quarter')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/colony-size-plot-1.png){fig-alt='The total number of bees counted in each year by quarter.' width=672}\n:::\n:::\n\n\nNo bees in 2019Q2. That seems unlikely.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolony |>\n  filter(year == 2019, months == 'April-June')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 47 × 10\n    year months     state       colony_n colony_max colony_lost colony_lost_pct\n   <dbl> <chr>      <chr>          <dbl>      <dbl>       <dbl>           <dbl>\n 1  2019 April-June Alabama           NA         NA          NA              NA\n 2  2019 April-June Arizona           NA         NA          NA              NA\n 3  2019 April-June Arkansas          NA         NA          NA              NA\n 4  2019 April-June California        NA         NA          NA              NA\n 5  2019 April-June Colorado          NA         NA          NA              NA\n 6  2019 April-June Connecticut       NA         NA          NA              NA\n 7  2019 April-June Florida           NA         NA          NA              NA\n 8  2019 April-June Georgia           NA         NA          NA              NA\n 9  2019 April-June Hawaii            NA         NA          NA              NA\n10  2019 April-June Idaho             NA         NA          NA              NA\n# ℹ 37 more rows\n# ℹ 3 more variables: colony_added <dbl>, colony_reno <dbl>,\n#   colony_reno_pct <dbl>\n```\n\n\n:::\n:::\n\n\nThat's no good, we'll likely want to drop this quarter's data from both data sets. First, let us take a quick look at the `stressor` data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(stressor)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,332\nColumns: 5\n$ year       <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,…\n$ months     <chr> \"January-March\", \"January-March\", \"January-March\", \"January…\n$ state      <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Ala…\n$ stressor   <chr> \"Varroa mites\", \"Other pests/parasites\", \"Disesases\", \"Pest…\n$ stress_pct <dbl> 10.0, 5.4, NA, 2.2, 9.1, 9.4, 26.9, 20.5, 0.1, NA, 1.8, 3.1…\n```\n\n\n:::\n:::\n\n\nAnd checking 2019Q2 in this data we find the same issue!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstressor |>\n  filter(year == 2019, months == 'April-June')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 282 × 5\n    year months     state   stressor              stress_pct\n   <dbl> <chr>      <chr>   <chr>                      <dbl>\n 1  2019 April-June Alabama Varroa mites                  NA\n 2  2019 April-June Alabama Other pests/parasites         NA\n 3  2019 April-June Alabama Disesases                     NA\n 4  2019 April-June Alabama Pesticides                    NA\n 5  2019 April-June Alabama Other                         NA\n 6  2019 April-June Alabama Unknown                       NA\n 7  2019 April-June Arizona Varroa mites                  NA\n 8  2019 April-June Arizona Other pests/parasites         NA\n 9  2019 April-June Arizona Disesases                     NA\n10  2019 April-June Arizona Pesticides                    NA\n# ℹ 272 more rows\n```\n\n\n:::\n:::\n\n\n## Data Prep\n\nCreate a date variable and filter out rows for 2019Q2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_data <- colony |>\n  mutate(\n    quarter = case_when(\n      months == \"January-March\" ~ \"Q1\",\n      months == \"April-June\" ~ \"Q2\",\n      months == \"July-September\" ~ \"Q3\",\n      months == \"October-December\" ~ \"Q4\"\n    )\n  ) |>\n  unite(yearquarter, c(\"year\", \"quarter\")) |>\n  mutate(date = yq(yearquarter)) |>\n  filter(yearquarter != '2019_Q2')\n\nstress_data <- stressor |>\n  mutate(\n    quarter = case_when(\n      months == \"January-March\" ~ \"Q1\",\n      months == \"April-June\" ~ \"Q2\",\n      months == \"July-September\" ~ \"Q3\",\n      months == \"October-December\" ~ \"Q4\"\n    )\n  ) |>\n  unite(yearquarter, c(\"year\", \"quarter\")) |>\n  mutate(date = yq(yearquarter)) |>\n  filter(yearquarter != '2019_Q2')\n```\n:::\n\n\nReplace missing `stress_pct` data with 0, break out `stressors` into individual columns, and correct a mispelled variable name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstress_data <- stress_data |>\n  replace_na(list(stress_pct = 0)) |>\n  pivot_wider(\n    names_from = stressor,\n    values_from = stress_pct,\n    values_fill = 0\n  ) |>\n  unite(id, c('state', 'yearquarter')) |>\n  rename(Diseases = Disesases)\n```\n:::\n\n\nJoin data sets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_data <- col_data |>\n  unite(id, c(\"state\", \"yearquarter\"), remove = FALSE) |>\n  left_join(\n    stress_data |>\n      select(-months, -date)\n  ) |>\n  pivot_longer(\n    c(\"Varroa mites\":\"Unknown\"),\n    names_to = \"stressor\",\n    values_to = \"stress_pct\"\n  )\n\nfull_data$stressor <- factor(\n  full_data$stressor,\n  levels = c(\n    \"Varroa mites\",\n    \"Diseases\",\n    \"Pesticides\",\n    \"Other pests/parasites\",\n    \"Other\",\n    \"Unknown\"\n  )\n)\n```\n:::\n\n\n## Plot\n\n\n::: {.cell .column-screen-inset-left}\n\n```{.r .cell-code}\nfull_data |>\n  ggplot(aes(x = date, y = stress_pct)) +\n  geom_area(aes(fill = stressor), color = \"lightgrey\", alpha = 0.6) +\n  facet_geo(~state, grid = \"us_state_grid1\") +\n  scale_x_date(date_labels = \"'%y\", date_breaks = \"1 year\") +\n  scale_fill_okabe_ito() +\n  labs(\n    title = \"Bee Colony Stressors in the United States\",\n    x = \"Year\",\n    y = \"Colonies affected by stressor (%)\",\n    fill = \"Stressor\"\n  ) +\n  theme(legend.position = 'top')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/colony-stressors-state-plot-1.png){fig-alt='A grid of plots roughly laid out like the states of the United State of America. There is one plot per state, each displaying a collection of colored areas, with the height corresponding to the percent of a bee colony affected by a particular stressor as measured over time.\n' width=1536}\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}